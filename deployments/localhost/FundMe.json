{
  "address": "0x71C95911E9a5D330f4D621842EC243EE1343292e",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe_NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MIN_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "funderIndex",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xae0ac1366f3d5516b3cb620f7b261fb15914247c77a48bfd907d3794fb386f70",
  "receipt": {
    "to": null,
    "from": "0x70997970C51812dc3A010C7d01b50e0d17dc79C8",
    "contractAddress": "0x71C95911E9a5D330f4D621842EC243EE1343292e",
    "transactionIndex": 0,
    "gasUsed": "1010689",
    "logsBloom": "0x
    "blockHash": "0x495ba25f7e089faadeb756e050f292e27a63c0a6a67348d75827658d8ac78deb",
    "transactionHash": "0xae0ac1366f3d5516b3cb620f7b261fb15914247c77a48bfd907d3794fb386f70",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1010689",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8464135c8F25Da09e49BC8782676a84730C318bC"
  ],
  "numDeployments": 1,
  "solcInputHash": "9cfb2c3f83fdc18b2ed486e57ecfae52",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe_NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MIN_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"funderIndex\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Isha Garg\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe_NotOwner();\\n\\n/**\\n * @title A contract for crowd funding\\n * @author Isha Garg\\n * @notice This contract is to demo a sample funding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MIN_USD = 20 * 1e18;\\n    address[] private s_funders;\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address private immutable i_owner;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    // Modifier: a keyword that we can add in the function to modify the func with that functionality\\n    modifier onlyOwner() {\\n        if (msg.sender != i_owner) revert FundMe_NotOwner();\\n        _; // execute rest of the func\\n    }\\n\\n    // get called immediately whenever you deploy the contract\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MIN_USD,\\n            \\\"Didn't send enough money!\\\"\\n        );\\n        s_funders.push(msg.sender);\\n        s_addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    // withdraw funds\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        // reset the funders array\\n        s_funders = new address[](0);\\n        // withdraw the funds\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    // we're gonna code a cheaper withdraw to save gas\\n    function cheaperWithdraw() public payable onlyOwner {\\n        //we're gonna read the s_funders into memory one time\\n        //and then we're gonna keep reading it from memory every time -> cheaper\\n        address[] memory funders = s_funders;\\n        // mappings can't be in memory, oops!\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess);\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 funderIndex) public view returns (address) {\\n        return s_funders[funderIndex];\\n    }\\n\\n    function getAddressToAmountFunded(\\n        address funder\\n    ) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0x54b3889ef51275db6452069a9c3b81947c0f705e5877323e0a89f9d8f3dac514\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    // function to get price of ETH in terms of USD\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n        // price has 8 decimal places (check chainlink documentation) msg.Value has 18 decimal places\\n        return uint256(price * 1e10); // 1**10\\n    }\\n\\n    // function to get the conversion rate\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        return (ethAmount * ethPrice) / 1e18; // since both ethAmount and ethPrice have 18 decimals it would make it 36\\n    }\\n}\\n\",\"keccak256\":\"0xa010a8c4107e503ff6d986dcdadd6070ccc7d3318c3ff70b602cc88f3d3dbd15\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200126f3803806200126f833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6110e9620001866000396000818161033201528181610574015281816105c401526107ba01526110e96000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb2514610098578063213dbea2146100d55780633ccfd60b14610100578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a77565b6102da565b6040516100cc9190610abd565b60405180910390f35b3480156100e157600080fd5b506100ea610323565b6040516100f79190610abd565b60405180910390f35b610108610330565b005b34801561011657600080fd5b5061011f610570565b60405161012c9190610ae7565b60405180910390f35b34801561014157600080fd5b5061014a610598565b6040516101579190610b61565b60405180910390f35b6101686101b1565b005b6101726105c2565b005b34801561018057600080fd5b5061019b60048036038101906101969190610ba8565b610850565b6040516101a89190610ae7565b60405180910390f35b6801158e460913d000006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089790919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c32565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6801158e460913d0000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b5576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104605760008082815481106103da576103d9610c52565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045890610cb0565b9150506103b8565b50600067ffffffffffffffff81111561047c5761047b610cf9565b5b6040519080825280602002602001820160405280156104aa5781602001602082028036833780820191505090505b50600090805190602001906104c092919061096d565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e790610d59565b60006040518083038185875af1925050503d8060008114610524576040519150601f19603f3d011682016040523d82523d6000602084013e610529565b606091505b505090508061056d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056490610dba565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610647576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106ca57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610680575b5050505050905060005b81518110156107555760008282815181106106f2576106f1610c52565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074d90610cb0565b9150506106d4565b50600067ffffffffffffffff81111561077157610770610cf9565b5b60405190808252806020026020018201604052801561079f5781602001602082028036833780820191505090505b50600090805190602001906107b592919061096d565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107fc90610d59565b60006040518083038185875af1925050503d8060008114610839576040519150601f19603f3d011682016040523d82523d6000602084013e61083e565b606091505b505090508061084c57600080fd5b5050565b600080828154811061086557610864610c52565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108a3836108cd565b9050670de0b6b3a764000081856108ba9190610dda565b6108c49190610e63565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091657600080fd5b505afa15801561092a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094e9190610f21565b5050509150506402540be400816109659190610f9c565b915050919050565b8280548282559060005260206000209081019282156109e6579160200282015b828111156109e55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061098d565b5b5090506109f391906109f7565b5090565b5b80821115610a105760008160009055506001016109f8565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a4482610a19565b9050919050565b610a5481610a39565b8114610a5f57600080fd5b50565b600081359050610a7181610a4b565b92915050565b600060208284031215610a8d57610a8c610a14565b5b6000610a9b84828501610a62565b91505092915050565b6000819050919050565b610ab781610aa4565b82525050565b6000602082019050610ad26000830184610aae565b92915050565b610ae181610a39565b82525050565b6000602082019050610afc6000830184610ad8565b92915050565b6000819050919050565b6000610b27610b22610b1d84610a19565b610b02565b610a19565b9050919050565b6000610b3982610b0c565b9050919050565b6000610b4b82610b2e565b9050919050565b610b5b81610b40565b82525050565b6000602082019050610b766000830184610b52565b92915050565b610b8581610aa4565b8114610b9057600080fd5b50565b600081359050610ba281610b7c565b92915050565b600060208284031215610bbe57610bbd610a14565b5b6000610bcc84828501610b93565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f756768206d6f6e65792100000000000000600082015250565b6000610c1c601983610bd5565b9150610c2782610be6565b602082019050919050565b60006020820190508181036000830152610c4b81610c0f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cbb82610aa4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cee57610ced610c81565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d43600083610d28565b9150610d4e82610d33565b600082019050919050565b6000610d6482610d36565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610da4600b83610bd5565b9150610daf82610d6e565b602082019050919050565b60006020820190508181036000830152610dd381610d97565b9050919050565b6000610de582610aa4565b9150610df083610aa4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e2957610e28610c81565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e6e82610aa4565b9150610e7983610aa4565b925082610e8957610e88610e34565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610eb381610e94565b8114610ebe57600080fd5b50565b600081519050610ed081610eaa565b92915050565b6000819050919050565b610ee981610ed6565b8114610ef457600080fd5b50565b600081519050610f0681610ee0565b92915050565b600081519050610f1b81610b7c565b92915050565b600080600080600060a08688031215610f3d57610f3c610a14565b5b6000610f4b88828901610ec1565b9550506020610f5c88828901610ef7565b9450506040610f6d88828901610f0c565b9350506060610f7e88828901610f0c565b9250506080610f8f88828901610ec1565b9150509295509295909350565b6000610fa782610ed6565b9150610fb283610ed6565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ff157610ff0610c81565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561102e5761102d610c81565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561106b5761106a610c81565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110a8576110a7610c81565b5b82820290509291505056fea2646970667358221220d9ee243e4226cdbe75e96d1946d65ea41eefe150437717b74da4995a4291a0be64736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb2514610098578063213dbea2146100d55780633ccfd60b14610100578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610a77565b6102da565b6040516100cc9190610abd565b60405180910390f35b3480156100e157600080fd5b506100ea610323565b6040516100f79190610abd565b60405180910390f35b610108610330565b005b34801561011657600080fd5b5061011f610570565b60405161012c9190610ae7565b60405180910390f35b34801561014157600080fd5b5061014a610598565b6040516101579190610b61565b60405180910390f35b6101686101b1565b005b6101726105c2565b005b34801561018057600080fd5b5061019b60048036038101906101969190610ba8565b610850565b6040516101a89190610ae7565b60405180910390f35b6801158e460913d000006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461089790919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610c32565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6801158e460913d0000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103b5576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104605760008082815481106103da576103d9610c52565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061045890610cb0565b9150506103b8565b50600067ffffffffffffffff81111561047c5761047b610cf9565b5b6040519080825280602002602001820160405280156104aa5781602001602082028036833780820191505090505b50600090805190602001906104c092919061096d565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104e790610d59565b60006040518083038185875af1925050503d8060008114610524576040519150601f19603f3d011682016040523d82523d6000602084013e610529565b606091505b505090508061056d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056490610dba565b60405180910390fd5b50565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610647576040517f10e0797900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000808054806020026020016040519081016040528092919081815260200182805480156106ca57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610680575b5050505050905060005b81518110156107555760008282815181106106f2576106f1610c52565b5b602002602001015190506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061074d90610cb0565b9150506106d4565b50600067ffffffffffffffff81111561077157610770610cf9565b5b60405190808252806020026020018201604052801561079f5781602001602082028036833780820191505090505b50600090805190602001906107b592919061096d565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516107fc90610d59565b60006040518083038185875af1925050503d8060008114610839576040519150601f19603f3d011682016040523d82523d6000602084013e61083e565b606091505b505090508061084c57600080fd5b5050565b600080828154811061086557610864610c52565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108a3836108cd565b9050670de0b6b3a764000081856108ba9190610dda565b6108c49190610e63565b91505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561091657600080fd5b505afa15801561092a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094e9190610f21565b5050509150506402540be400816109659190610f9c565b915050919050565b8280548282559060005260206000209081019282156109e6579160200282015b828111156109e55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061098d565b5b5090506109f391906109f7565b5090565b5b80821115610a105760008160009055506001016109f8565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a4482610a19565b9050919050565b610a5481610a39565b8114610a5f57600080fd5b50565b600081359050610a7181610a4b565b92915050565b600060208284031215610a8d57610a8c610a14565b5b6000610a9b84828501610a62565b91505092915050565b6000819050919050565b610ab781610aa4565b82525050565b6000602082019050610ad26000830184610aae565b92915050565b610ae181610a39565b82525050565b6000602082019050610afc6000830184610ad8565b92915050565b6000819050919050565b6000610b27610b22610b1d84610a19565b610b02565b610a19565b9050919050565b6000610b3982610b0c565b9050919050565b6000610b4b82610b2e565b9050919050565b610b5b81610b40565b82525050565b6000602082019050610b766000830184610b52565b92915050565b610b8581610aa4565b8114610b9057600080fd5b50565b600081359050610ba281610b7c565b92915050565b600060208284031215610bbe57610bbd610a14565b5b6000610bcc84828501610b93565b91505092915050565b600082825260208201905092915050565b7f4469646e27742073656e6420656e6f756768206d6f6e65792100000000000000600082015250565b6000610c1c601983610bd5565b9150610c2782610be6565b602082019050919050565b60006020820190508181036000830152610c4b81610c0f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610cbb82610aa4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610cee57610ced610c81565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d43600083610d28565b9150610d4e82610d33565b600082019050919050565b6000610d6482610d36565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610da4600b83610bd5565b9150610daf82610d6e565b602082019050919050565b60006020820190508181036000830152610dd381610d97565b9050919050565b6000610de582610aa4565b9150610df083610aa4565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e2957610e28610c81565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e6e82610aa4565b9150610e7983610aa4565b925082610e8957610e88610e34565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610eb381610e94565b8114610ebe57600080fd5b50565b600081519050610ed081610eaa565b92915050565b6000819050919050565b610ee981610ed6565b8114610ef457600080fd5b50565b600081519050610f0681610ee0565b92915050565b600081519050610f1b81610b7c565b92915050565b600080600080600060a08688031215610f3d57610f3c610a14565b5b6000610f4b88828901610ec1565b9550506020610f5c88828901610ef7565b9450506040610f6d88828901610f0c565b9350506060610f7e88828901610f0c565b9250506080610f8f88828901610ec1565b9150509295509295909350565b6000610fa782610ed6565b9150610fb283610ed6565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610ff157610ff0610c81565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561102e5761102d610c81565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561106b5761106a610c81565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110a8576110a7610c81565b5b82820290509291505056fea2646970667358221220d9ee243e4226cdbe75e96d1946d65ea41eefe150437717b74da4995a4291a0be64736f6c63430008080033",
  "devdoc": {
    "author": "Isha Garg",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 327,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 331,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 336,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)104"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)104": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}